name: Deploy Backend to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh  # Ensure SSH directory exists
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/aws_key.pem
          chmod 600 ~/.ssh/aws_key.pem

      - name: Ensure target directory exists on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/aws_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} "
          mkdir -p ~/FileNest && ls -l ~/
          "

      - name: Copy files to EC2 instance using SCP
        run: |
          scp -r -o StrictHostKeyChecking=no -i ~/.ssh/aws_key.pem ./* ubuntu@${{ secrets.EC2_PUBLIC_IP }}:~/FileNest/
      
      - name: Create .env file on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/aws_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} "
          echo '${{ secrets.DOTENV_CONTENTS }}' > ~/FileNest/.env
          "

      - name: Install Docker & Docker Compose on EC2 (if not installed)
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/aws_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} "
          sudo apt update &&
          sudo apt install -y docker.io docker-compose &&
          sudo usermod -aG docker \$USER
          "

      - name: Deploy containers on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/aws_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} "
          cd ~/FileNest &&
          docker-compose down || true &&
          docker-compose up --build -d
          "

      - name: Clean up old Docker images
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/aws_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} "
          docker image prune -af
          "
